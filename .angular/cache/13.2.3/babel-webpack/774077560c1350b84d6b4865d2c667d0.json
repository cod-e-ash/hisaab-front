{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CompanyService = /*#__PURE__*/(() => {\n  class CompanyService {\n    constructor(http) {\n      this.http = http;\n      this.companyUpdSubject = new Subject();\n      this.url = environment.apiUrl + '/company';\n    }\n\n    getCompanyFromServer() {\n      this.http.get(this.url).subscribe(data => {\n        this.company = data.company;\n        this.emitCompanyEvent();\n      });\n    }\n\n    emitCompanyEvent() {\n      this.companyUpdSubject.next(this.company);\n    }\n\n    getCompanyListner() {\n      return this.companyUpdSubject.asObservable();\n    }\n\n    setCompany(company) {\n      if (!this.company || !this.company.name) {\n        return this.http.post(this.url, company).pipe(tap(data => {\n          this.company = data.company;\n          this.emitCompanyEvent();\n        }));\n      } else {\n        return this.http.put(this.url, company).pipe(tap(data => {\n          this.company = data.company;\n          this.emitCompanyEvent();\n        }));\n      }\n    }\n\n  }\n\n  CompanyService.ɵfac = function CompanyService_Factory(t) {\n    return new (t || CompanyService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CompanyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CompanyService,\n    factory: CompanyService.ɵfac,\n    providedIn: 'root'\n  });\n  return CompanyService;\n})();","map":null,"metadata":{},"sourceType":"module"}