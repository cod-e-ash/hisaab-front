{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    // Constructor\n    constructor(http) {\n      this.http = http;\n      this.url = environment.apiUrl + '/orders'; // HTTP Options\n\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'x-auth-token': 'xxxyyyzzz'\n        })\n      };\n    } // HTTP GET\n\n\n    getData(inParams) {\n      const params = new HttpParams().set('page', (inParams && inParams.page ? inParams.page : 1).toString()).set('client', inParams && inParams.client ? inParams.client : '').set('orderno', inParams && inParams.orderno ? inParams.orderno : '').set('statusOpt', inParams && inParams.statusOpt ? inParams.statusOpt : '').set('fromDate', inParams && inParams.fromDate ? inParams.fromDate : '').set('toDate', inParams && inParams.toDate ? inParams.toDate : '');\n      return this.http.get(this.url, {\n        params: params\n      }).pipe(tap(data => {\n        this.orders = data.orders;\n      }));\n    }\n\n    createData(newdata) {\n      // Set Customer ID\n      const data = JSON.parse(JSON.stringify(newdata));\n      data['customername'] = data.customer.name;\n      data['customer'] = data.customer._id;\n      data.details.forEach((detail, index) => {\n        data.details[index]['product'] = detail.product._id;\n      });\n      return this.http.post(this.url, data, this.httpOptions);\n    }\n\n    patchData(id, status) {\n      const data = {\n        _id: id,\n        status: status\n      };\n      return this.http.patch(this.url + '/' + id, data, this.httpOptions);\n    }\n\n    updateData(newdata) {\n      const data = JSON.parse(JSON.stringify(newdata));\n      data['customername'] = data.customer.name;\n      data['customer'] = data.customer._id;\n      data.details.forEach((detail, index) => {\n        data.details[index]['product'] = detail.product._id;\n      });\n      return this.http.put(this.url + '/' + data._id, data, this.httpOptions);\n    }\n\n    deleteData(id) {\n      return this.http.delete(this.url + '/' + id, this.httpOptions);\n    }\n\n    getSingle(id) {\n      if (this.orders) {\n        return this.orders.filter(order => {\n          return order._id === id;\n        })[0];\n      }\n    }\n\n  }\n\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module"}