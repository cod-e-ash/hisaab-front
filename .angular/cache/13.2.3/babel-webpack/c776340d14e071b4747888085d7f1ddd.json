{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.curUserSubject = new Subject();\n      this.apiUrl = environment.apiUrl;\n    }\n\n    createUser(userDetails, password) {\n      const newUser = {\n        firstName: userDetails.firstName,\n        lastName: userDetails.lastName,\n        username: userDetails.username,\n        password: password\n      };\n      return this.http.post(this.apiUrl + '/users/signup', newUser).pipe(map(rspData => {\n        if (rspData.message === 'success') {\n          this.token = rspData.token;\n          this.username = rspData.username;\n          this.emitSubjectEvent();\n          localStorage.setItem('currentUser', JSON.stringify(rspData));\n          return 'created and logged';\n        } else {\n          return 'err';\n        }\n      }));\n    }\n\n    loginUser(authDetails) {\n      return this.http.post(this.apiUrl + '/users/login', authDetails).pipe(map(rspData => {\n        console.log(rspData);\n\n        if (rspData.message === 'success') {\n          this.token = rspData.token;\n          this.username = rspData.username;\n          this.emitSubjectEvent();\n          localStorage.setItem('currentUser', JSON.stringify(rspData));\n          return 'logged';\n        } else {\n          return 'err';\n        }\n      }));\n    }\n\n    getAuthToken() {\n      return this.token;\n    }\n\n    getAuthUser() {\n      if (!this.username || this.username === '') {\n        const curUser = JSON.parse(localStorage.getItem('currentUser'));\n\n        if (curUser) {\n          this.username = curUser.username;\n          this.token = curUser.token;\n        }\n      }\n\n      return this.username;\n    }\n\n    emitSubjectEvent() {\n      this.curUserSubject.next(this.username);\n    }\n\n    getCurUserListener() {\n      return this.curUserSubject.asObservable();\n    }\n\n    logoutUser() {\n      this.token = null;\n      this.username = null;\n      this.emitSubjectEvent();\n      localStorage.removeItem('currentUser'); // this.curUserSubject.complete();\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}